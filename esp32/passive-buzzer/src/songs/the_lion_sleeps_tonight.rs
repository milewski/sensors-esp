use crate::song::*;

pub struct TheLionSleepsTonight {}

impl TheLionSleepsTonight {
    pub fn new() -> Self {
        TheLionSleepsTonight {}
    }
}

impl Song for TheLionSleepsTonight {
    fn tempo(&self) -> f32 {
        122.0
    }

    fn notes(&self) -> &[(Note, i8)] {
        &[
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, -2), (REST, -8), (A4, 16),
            //--------------------------------------------------------------------------------------
            (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16),
            (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16),
            (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16),
            (G4, -8), (G4, 16), (G4, -8), (G4, 16), (G4, -8), (G4, 16), (G4, -8), (G4, 16),
            //--------------------------------------------------------------------------------------
            (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16),
            (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16), (AS4, -8), (AS4, 16),
            (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16), (A4, -8), (A4, 16),
            (G4, -8), (G4, 16), (G4, -8), (G4, 16), (G4, -8), (G4, 16), (G4, -8), (G4, 16),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            (C5, 4), (A4, 4), (G4, 8), (A4, 4), (C5, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            //--------------------------------------------------------------------------------------
            (C5, 1),
            (C5, 4), (AS4, 8), (C5, 8), (AS4, 2),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
            //--------------------------------------------------------------------------------------
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            (C5, 4), (A4, 4), (G4, 8), (A4, 4), (C5, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            //--------------------------------------------------------------------------------------
            (C5, 1),
            (C5, 4), (AS4, 8), (C5, 8), (AS4, 2),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
            //--------------------------------------------------------------------------------------
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            (C5, 4), (A4, 4), (G4, 8), (A4, 4), (C5, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (G4, 4), (F4, 4), (A4, 4),
            (G4, 1),
            //--------------------------------------------------------------------------------------
            (C5, 1),
            (C5, 4), (AS4, 8), (C5, 8), (AS4, 2),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
            //--------------------------------------------------------------------------------------
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            (REST, 4), (A4, 8), (G4, 8), (F4, 8), (E4, 8), (D4, 8), (C4, 8),
            (D4, 1),
            //--------------------------------------------------------------------------------------
            (F4, 4), (G4, 4), (A4, 8), (G4, 4), (A4, 8),
            (AS4, 4), (A4, 4), (G4, 8), (F4, 4), (G4, 8),
            (A4, 4), (C4, 8), (C4, 4), (C4, 8), (C4, 4),
            (C4, 1),
        ]
    }
}